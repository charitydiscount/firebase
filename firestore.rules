rules_version = "2";

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read: if isSignedIn();
      allow write: if false;
    }
    match /cases/{caseId} {
      allow read: if true;
    }
    match /programs/all {
      allow read: if true;
    }
    match /meta/2performant {
      allow read: if true;
    }
    match /meta/general {
      allow read: if true;
    }
    match /meta/importantCategories {
      allow read: if true;
    }
    match /meta/programs {
      allow read: if true;
    }
    match /contact/{userId} {
      allow create: if isSignedIn();
    }
    match /favoriteShops/{userId} {
    	allow read, write: if belongsTo(userId);
      allow create: if isSignedIn();
    }
    match /settings/{userId} {
    	allow read, write: if belongsTo(userId);
      allow create: if isSignedIn();
    }
    match /leaderboard/{userId} {
      allow read: if belongsTo(userId);
    }
    match /users/{userId} {
      allow update: if onlyAffectedKeys(["disableMailNotification"]);
    	allow read, write: if belongsTo(userId);
      allow create: if isSignedIn();
      
      match /tokens/{tokenId} {
        allow read, write: if belongsTo(userId);
      }
      
      match /accounts/{iban} {
        allow read, write: if belongsTo(userId);
      }
    }
    match /points/{userId} {
    	allow read: if belongsTo(userId);
      allow write: if false;
    }
    match /requests/{requestId} {
    	allow read, write: if false;
      allow create: if isSignedIn() && hasStatusPending();
    }
    match /reviews/{shopId} {
    	allow read: if isSignedIn();
      allow update: if isSignedIn();
      allow create: if isSignedIn();
    }
    match /otp-requests/{userId} {
    	allow read: if false;
      allow write: if belongsTo(userId);
    }
    match /otps/{userId} {
      allow read: if belongsTo(userId);
      allow update: if belongsTo(userId);
    }
    match /commissions/{userId} {
      allow read: if belongsTo(userId);
      allow write: if false;
    }
    match /referrals/{userId} {	
      allow read: if belongsTo(userId);	
      allow write: if false;	
    }	
    match /referral-requests/{reqId} {	
      allow read, write: if false;	
      allow create: if isSignedIn();	
    }
    match /clicks/{clickId} {
      allow read: if false;
      allow write: if belongsTo(request.resource.data.userId);
    }
    match /incomplete-commissions/{commissionId} {
      allow read: if false;
      allow write: if false;
    }
    match /roles/{userId} {
      allow read, write: if false;
    }
  }
}

function belongsTo(userId) {
  return request.auth.uid == userId
}
function isSignedIn() {
  return request.auth.uid != null;
}
function hasStatusPending() {
  return request.resource.data.status == 'PENDING';
}
function onlyAffectedKeys(keys) {
  return request.resource.data.diff(resource.data).affectedKeys().hasOnly(keys);
}
